For each problem, the authors estimated the number of people who would solve it: for the i-th problem, 
the number of accepted solutions will be between li and ri, inclusive.
The creator of ForceCoders uses different criteria to determine if the contest is good or bad.
One of these criteria is the number of inversions in the problem order. An inversion is a pair of problems (x,y) 
such that x is located earlier in the contest (x<y), but the number of accepted solutions for y is strictly greater.
Obviously, both the creator of ForceCoders and the authors of the contest want the contest to be good. Now they 
want to calculate the probability that there will be no inversions in the problem order, 
assuming that for each problem i, any integral number of accepted solutions for it (between li and ri)
is equally probable, and all these numbers are independent.

Input
The first line contains one integer n (2≤n≤50) — the number of problems in the contest.

Then n lines follow, the i-th line contains two integers li and ri (0≤li≤ri≤998244351)
 — the minimum and maximum number of accepted solutions for the i-th problem, respectively.